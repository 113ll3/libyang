Applied-Upstream: 4eae42b0d36f07ae91672d648ecd4ce37701b356
Author: Michal Vasko <mvasko@cesnet.cz>
Last-Updated: 2019-12-22
Description: data tree BUGFIX handle hashes for lyd_dup_withsiblings

diff --git a/src/tree_data.c b/src/tree_data.c
index f0fb27b7d165..8bad9c9ea58b 100644
--- a/src/tree_data.c
+++ b/src/tree_data.c
@@ -5747,14 +5747,28 @@ lyd_dup_withsiblings_r(const struct lyd_node *first, struct lyd_node *parent_dup
         last_dup->when_status = next->when_status;
 
         last_dup->parent = parent_dup;
+        /* connect to the parent or the siblings */
         if (!first_dup) {
             first_dup = last_dup;
+            if (parent_dup) {
+                parent_dup->child = first_dup;
+            }
         } else {
             assert(prev_dup);
             prev_dup->next = last_dup;
             last_dup->prev = prev_dup;
         }
 
+#ifdef LY_ENABLED_CACHE
+        /* copy hash */
+        if ((last_dup->schema->nodetype != LYS_LIST) || lyd_list_has_keys(last_dup)) {
+            last_dup->hash = next->hash;
+        }
+
+        /* insert into parent */
+        lyd_insert_hash(last_dup);
+#endif
+
         if ((next->schema->nodetype & (LYS_LIST | LYS_CONTAINER | LYS_RPC | LYS_ACTION | LYS_NOTIF)) && next->child) {
             /* recursively duplicate all children */
             if (!lyd_dup_withsiblings_r(next->child, last_dup, options)) {
@@ -5765,12 +5779,9 @@ lyd_dup_withsiblings_r(const struct lyd_node *first, struct lyd_node *parent_dup
         prev_dup = last_dup;
     }
 
-    /* correctly set last sibling and parent child pointer */
+    /* correctly set last sibling */
     assert(!prev_dup->next);
     first_dup->prev = prev_dup;
-    if (parent_dup) {
-        parent_dup->child = first_dup;
-    }
 
     return first_dup;
 
-- 
2.24.1

